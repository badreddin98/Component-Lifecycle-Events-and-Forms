{"ast":null,"code":"var _jsxFileName = \"/Users/badreddin/Documents/Coding Temple Assignment/Component Lifecycle Events and Forms/marvel-app/src/CharacterList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CharacterList = ({\n  onSelectCharacter\n}) => {\n  _s();\n  const [characters, setCharacters] = useState([]);\n  useEffect(() => {\n    const fetchCharacters = async () => {\n      try {\n        const response = await axios.get('https://gateway.marvel.com/v1/public/characters', {\n          params: {\n            ts: 1,\n            apikey: 'aadf2ec9230c5a7e98f64c8da4a97a59',\n            hash: 'd1e3f929cd8d313c50831a1d97ebf9f0'\n          }\n        });\n        console.log('Fetched characters:', response.data.data.results); // Log the fetched data\n        setCharacters(response.data.data.results);\n      } catch (error) {\n        console.error('Error fetching characters:', error);\n      }\n    };\n    fetchCharacters();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"character-list\",\n    children: characters.map(character => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"character-item\",\n      onClick: () => onSelectCharacter(character.id),\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: character.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `${character.thumbnail.path}.${character.thumbnail.extension}`,\n        alt: character.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this)]\n    }, character.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(CharacterList, \"Lpb9AbqKJ07+xuj4aZ1twNw87e0=\");\n_c = CharacterList;\nexport default CharacterList;\nvar _c;\n$RefreshReg$(_c, \"CharacterList\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","CharacterList","onSelectCharacter","_s","characters","setCharacters","fetchCharacters","response","get","params","ts","apikey","hash","console","log","data","results","error","className","children","map","character","onClick","id","name","fileName","_jsxFileName","lineNumber","columnNumber","src","thumbnail","path","extension","alt","_c","$RefreshReg$"],"sources":["/Users/badreddin/Documents/Coding Temple Assignment/Component Lifecycle Events and Forms/marvel-app/src/CharacterList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst CharacterList = ({ onSelectCharacter }) => {\n    const [characters, setCharacters] = useState([]);\n\n    useEffect(() => {\n        const fetchCharacters = async () => {\n            try {\n                const response = await axios.get('https://gateway.marvel.com/v1/public/characters', {\n                    params: {\n                        ts: 1,\n                        apikey: 'aadf2ec9230c5a7e98f64c8da4a97a59',\n                        hash: 'd1e3f929cd8d313c50831a1d97ebf9f0'\n                    }\n                });\n                console.log('Fetched characters:', response.data.data.results); // Log the fetched data\n                setCharacters(response.data.data.results);\n            } catch (error) {\n                console.error('Error fetching characters:', error);\n            }\n        };\n\n        fetchCharacters();\n    }, []);\n\n    return (\n        <div className=\"character-list\">\n            {characters.map(character => (\n                <div key={character.id} className=\"character-item\" onClick={() => onSelectCharacter(character.id)}>\n                    <h3>{character.name}</h3>\n                    <img src={`${character.thumbnail.path}.${character.thumbnail.extension}`} alt={character.name} />\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default CharacterList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAkB,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACZ,MAAMS,eAAe,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,iDAAiD,EAAE;UAChFC,MAAM,EAAE;YACJC,EAAE,EAAE,CAAC;YACLC,MAAM,EAAE,kCAAkC;YAC1CC,IAAI,EAAE;UACV;QACJ,CAAC,CAAC;QACFC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEP,QAAQ,CAACQ,IAAI,CAACA,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC;QAChEX,aAAa,CAACE,QAAQ,CAACQ,IAAI,CAACA,IAAI,CAACC,OAAO,CAAC;MAC7C,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZJ,OAAO,CAACI,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACtD;IACJ,CAAC;IAEDX,eAAe,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIN,OAAA;IAAKkB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,EAC1Bf,UAAU,CAACgB,GAAG,CAACC,SAAS,iBACrBrB,OAAA;MAAwBkB,SAAS,EAAC,gBAAgB;MAACI,OAAO,EAAEA,CAAA,KAAMpB,iBAAiB,CAACmB,SAAS,CAACE,EAAE,CAAE;MAAAJ,QAAA,gBAC9FnB,OAAA;QAAAmB,QAAA,EAAKE,SAAS,CAACG;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACzB5B,OAAA;QAAK6B,GAAG,EAAE,GAAGR,SAAS,CAACS,SAAS,CAACC,IAAI,IAAIV,SAAS,CAACS,SAAS,CAACE,SAAS,EAAG;QAACC,GAAG,EAAEZ,SAAS,CAACG;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,GAF3FP,SAAS,CAACE,EAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGjB,CACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACzB,EAAA,CAjCIF,aAAa;AAAAiC,EAAA,GAAbjC,aAAa;AAmCnB,eAAeA,aAAa;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}